name: CI of pitstop-webapp microservice
#Déclencher le pipline si une modification fait dans le pitstop-express-gateway microservice
on:
  push:
    paths:
      - 'pitstop-webapp/**'
  workflow_dispatch:


jobs:
  snyk-sast:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Adaptez à la version de Node.js de votre projet

      # 3. Installation des dépendances du projet
      - name: Install dependencies
        run: |
          cd pitstop-webapp
          npm install 

      # 4. Authentification avec Snyk
      - name: Authenticate with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.AUTH_TOKEN }} # Ajoutez le token dans les secrets GitHub
        run: snyk auth $SNYK_TOKEN

      - name: Scanner le code avec Snyk et enregistrer les résultats
        run: snyk code test --json > snyk_results.json || true

      - name: Upload des résultats Snyk comme artifact
        uses: actions/upload-artifact@v3
        with:
          name: snyk-code-results
          path: snyk_results.json
          retention-days: 7
  build and scanne image:
    # Ensure the runner is using the latest Ubuntu version

    runs-on: ubuntu-latest  
    
    steps:
      - name: "Checkout the code to the runner"
        uses: actions/checkout@v4
      - name: "Build Docker image"
        run: |
          cd  pitstop-webapp
          IMAGE_VERSION=${{github.sha}}
          docker build -t  ${{secrets.DOCKER_USERNAME }}/pitstop-webapp:$IMAGE_VERSION .
      - name: Docker Scout Scan
        uses: docker/scout-action@v1.0.9
        with:
            dockerhub-user: ${{ secrets.DOCKER_USERNAME }}
            dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
            command: quickview,cves
            only-severities: critical,high
            sarif-file: scout-report.sarif
     
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docker-scout-findings
          path: scout-report.sarif
     
    
      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: "Push the image to Docker Hub"
        run: |
          IMAGE_VERSION=${{github.sha}}
          docker push ${{ secrets.DOCKER_USERNAME }}/pitstop-webapp:$IMAGE_VERSION
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone GitOps repository
        run: |
          git clone https://github.com/${{github.repository_owner}}/${{vars.repo_gitops}}
         
          
      - name: Update Kubernetes manifests (deployment manifest) with new image tag
        run: |
          cd Gitops-repo-pitstop
          cd infrastructure
          sed -i "s|image: dahami03/pitstop-webapp|image: dahami03/pitstop-webapp:${{github.sha}}|" pitstop-webapp-depl.yaml

      - name: Commit and push changes to GitOps repository
        run: | 
          ls -a
          cd Gitops-repo-pitstop
          ls -a
          git config --global user.name "lahcendahami"
          git config --global user.email "lahcendahmi309@gmail.com"
          git remote set-url origin https://${{ vars.token }}@github.com/${{github.repository_owner}}/${{vars.repo_gitops}}
          git add .
          git commit -m "Update image tag to ${{ github.sha }}"
          git push  origin master